version: '3'

services:
  mysql:
    image: mysql:8
    container_name: ${APP_NAME}--mysql
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/config.cnf:/etc/mysql/conf.d/config.cnf
      - ./data/mysql:/var/lib/mysql
  php-fpm:
    build:
      context: ./php-fpm
    container_name: ${APP_NAME}--php
    depends_on:
      - mysql
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      #- DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@mysql:3306/${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - PHP_IDE_CONFIG=serverName=Docker
    ports:
      - "9000:9000"
    volumes:
      - ../src:/var/www
      - ./php-fpm/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}--nginx
    volumes:
      - ../src:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php-fpm
    ports:
      - "80:80"
      - "443:443"
      - "9001:9001"
  nodejs:
    image: node:12-alpine
    container_name: ${APP_NAME}--nodejs
    working_dir: /var/www
    volumes:
      - ../src:/var/www
    command: sh -c "npm i && npm run build && /bin/true"
